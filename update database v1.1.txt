-- 1. Tạo bảng Allergen để lưu danh sách chất gây dị ứng
CREATE TABLE Allergen (
    AllergenID INT PRIMARY KEY,
    AllergenName NVARCHAR(100) NOT NULL,
    Description TEXT
);

-- 2. Tạo bảng trung gian StudentAllergy để hỗ trợ mối quan hệ nhiều-nhiều
CREATE TABLE StudentAllergy (
    StudentID INT,
    AllergenID INT,
    Reaction TEXT,
    PRIMARY KEY (StudentID, AllergenID),
    FOREIGN KEY (StudentID) REFERENCES Student(StudentID),
    FOREIGN KEY (AllergenID) REFERENCES Allergen(AllergenID)
);

-- 3. Chuyển dữ liệu từ bảng Allergy sang Allergen và StudentAllergy
-- Thêm các chất gây dị ứng vào bảng Allergen (loại bỏ trùng lặp)
INSERT INTO Allergen (AllergenID, AllergenName, Description)
SELECT DISTINCT AllergyID, Allergen, NULL
FROM Allergy;

-- Chuyển dữ liệu từ Allergy sang StudentAllergy
INSERT INTO StudentAllergy (StudentID, AllergenID, Reaction)
SELECT RecordID, AllergyID, Reaction
FROM Allergy;

-- 4. Tạo trigger để đồng bộ trường Allergy trong HealthProfile
CREATE TRIGGER UpdateHealthProfileAllergy
ON StudentAllergy
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    UPDATE HealthProfile
    SET Allergy = (
        SELECT STRING_AGG(a.AllergenName, ', ')
        FROM StudentAllergy sa
        JOIN Allergen a ON sa.AllergenID = a.AllergenID
        WHERE sa.StudentID = HealthProfile.StudentID
    )
    FROM HealthProfile
    WHERE StudentID IN (SELECT StudentID FROM inserted UNION SELECT StudentID FROM deleted);
END;

-- 5. Cập nhật trường Allergy trong HealthProfile ban đầu
UPDATE HealthProfile
SET Allergy = (
    SELECT STRING_AGG(a.AllergenName, ', ')
    FROM StudentAllergy sa
    JOIN Allergen a ON sa.AllergenID = a.AllergenID
    WHERE sa.StudentID = HealthProfile.StudentID
);

-- 6. Xóa bảng Allergy cũ
DROP TABLE Allergy;